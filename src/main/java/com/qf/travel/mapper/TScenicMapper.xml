<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.travel.mapper.TScenicMapper">
  <resultMap id="BaseResultMap" type="com.qf.travel.entity.TScenic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="scenic" jdbcType="VARCHAR" property="scenic" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, scenic, image, price
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_scenic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_scenic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qf.travel.entity.TScenic">
    insert into t_scenic (id, title, scenic, 
      image, price)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{scenic,jdbcType=VARCHAR}, 
      #{image,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.travel.entity.TScenic">
    insert into t_scenic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="scenic != null">
        scenic,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="scenic != null">
        #{scenic,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.travel.entity.TScenic">
    update t_scenic
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="scenic != null">
        scenic = #{scenic,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.travel.entity.TScenic">
    update t_scenic
    set title = #{title,jdbcType=VARCHAR},
      scenic = #{scenic,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询集合数据-->
  <select id="getList" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"/> FROM t_scenic
  </select>

  <!--查询景点分页的数据-->
  <select id="queryScenicSpotList" parameterType="string" resultMap="BaseResultMap">
    SELECT * FROM t_scenic 
    <where>
      <if test="_parameter !=null and _parameter!='' ">
        title LIKE concat('%',#{title},'%')
      </if>
    </where>
  </select>

  <!--批量删除景点的方法-->
  <delete id="batchDelscenicSpotByIds" parameterType="int" >
    DELETE FROM t_scenic WHERE id IN
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>

  <!--根据地理位置查询景点的方法-->
  <select id="searchSpotByKeyStr" parameterType="string" resultMap="BaseResultMap">
    SELECT * FROM t_scenic WHERE title LIKE concat('%',#{keyStr},'%')
  </select>

</mapper>